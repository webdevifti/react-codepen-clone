{"version":3,"sources":["components/Editor.jsx","hooks/useLocalStorage.jsx","App.js","index.js"],"names":["Editor","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA0CeA,EAjCA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAM5C,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACKP,EACD,wBACIQ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHxC,SAIC,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAEnD,cAAC,aAAD,CACIC,eAhBZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAgBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,aAAa,EACbC,MAAO,kBCVZC,EAtBS,SAACC,EAAKC,GAE1B,IAAMC,EAJK,iBAIgBF,EAE3B,EAA0BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAgB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBF,EACCA,IAEAA,KANf,mBAAOvB,EAAP,KAAc8B,EAAd,KAeA,OALAC,qBAAU,WACNL,aAAaM,QAAQR,EAAWI,KAAKK,UAAUjC,MAChD,CAACwB,EAAWxB,IAGR,CAAEA,EAAO8B,I,MCsCLI,MAxDf,WACE,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAeA,OAbAX,qBAAU,WACT,IAAMY,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAEEP,EAFF,mCAGGE,EAHH,qCAIIE,EAJJ,uCAOR,KACH,OAAO,kBAAMM,aAAaF,MACxB,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKlC,UAAU,gBAAf,UACE,cAAC,EAAD,CACEN,SAAS,MACTD,YAAY,OACZE,MAAOmC,EACPlC,SAAUmC,IAEX,cAAC,EAAD,CACCrC,SAAS,MACTD,YAAY,MACZE,MAAOqC,EACPpC,SAAUqC,IAGX,cAAC,EAAD,CACCvC,SAAS,aACTD,YAAY,KACZE,MAAOuC,EACPtC,SAAUuC,OAGd,qBAAKnC,UAAU,OAAf,SACE,wBACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,e,MChDjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dfd2cb72.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\nconst Editor = ({ displayName, language, value, onChange }) => {\r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value)\r\n    }\r\n\r\n    const [open, setOpen] = useState(true);\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"collapse-expand-btn\"\r\n                    onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                ><FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} /></button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    lineNumbers: true,\r\n                    theme: 'material',\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import { useEffect, useState } from 'react'\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n\r\n    const prefixKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixKey)\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === 'function'){\r\n            return initialValue();\r\n        }else{\r\n            return initialValue;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixKey, JSON.stringify(value))\r\n    }, [prefixKey, value]);\r\n\r\n    \r\n    return [ value, setValue]\r\n}\r\n\r\nexport default useLocalStorage\r\n","import React,{ useState, useEffect } from 'react';\nimport Editor from './components/Editor';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport './App.css';\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n   const timeout = setTimeout(() => {\n     setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n     `)\n   }, 250);\n   return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane pane-top\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n         <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n          \n        />\n         <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}